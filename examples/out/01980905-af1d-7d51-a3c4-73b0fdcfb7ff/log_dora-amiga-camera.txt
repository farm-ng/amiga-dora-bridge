configs {
  name: "oak0"
  port: 50010
  host: "localhost"
}
configs {
  name: "oak1"
  port: 50011
  host: "localhost"
}
configs {
  name: "canbus"
Traceback (most recent call last):
  port: 6001
  File "/mnt/managed_home/farm-ng-user-edgar/amiga-dora-bridge/.venv/bin/dora-amiga-camera", line 8, in <module>
  host: "localhost"
    sys.exit(main())
}
             ^^^^^^
configs {
  File "/mnt/managed_home/farm-ng-user-edgar/amiga-dora-bridge/dora_amiga/camera.py", line 59, in main
  name: "gps"
    asyncio.run(run_camera_bridge())
  port: 3001
  File "/mnt/managed_home/farm-ng-user-edgar/.local/share/uv/python/cpython-3.11.12-linux-aarch64-gnu/lib/python3.11/asyncio/runners.py", line 190, in run
  host: "localhost"
    return runner.run(main)
}
           ^^^^^^^^^^^^^^^^
configs {
  File "/mnt/managed_home/farm-ng-user-edgar/.local/share/uv/python/cpython-3.11.12-linux-aarch64-gnu/lib/python3.11/asyncio/runners.py", line 118, in run
  name: "amiga_subscriptions"
    return self._loop.run_until_complete(task)
  subscriptions {
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    uri {
  File "/mnt/managed_home/farm-ng-user-edgar/.local/share/uv/python/cpython-3.11.12-linux-aarch64-gnu/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
      path: "/rgb"
    return future.result()
      query: "service_name=oak0"
           ^^^^^^^^^^^^^^^
    }
  File "/mnt/managed_home/farm-ng-user-edgar/amiga-dora-bridge/dora_amiga/camera.py", line 27, in run_camera_bridge
    every_n: 1
    client = EventClient(config)
  }
             ^^^^^^^^^^^^^^^^^^^
  subscriptions {
  File "/mnt/managed_home/farm-ng-user-edgar/amiga-dora-bridge/.venv/lib/python3.11/site-packages/farm_ng/core/event_client.py", line 84, in __init__
    uri {
    if config.port == 0:
      path: "/rgb"
       ^^^^^^^^^^^
      query: "service_name=oak1"
AttributeError: port
    }
    every_n: 1
  }
  subscriptions {
    uri {
      path: "/twist"
      query: "service_name=canbus"
    }
    every_n: 1
  }
  subscriptions {
    uri {
      path: "/pvt"
      query: "service_name=gps"
    }
    every_n: 1
  }
  subscriptions {
    uri {
      path: "/imu"
      query: "service_name=oak0"
    }
    every_n: 1
  }
}

